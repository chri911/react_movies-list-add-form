{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/Input/Input.jsx","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","Input","labelText","value","name","changeHandle","textOnError","htmlFor","classNames","id","onChange","placeholder","required","verifier","NewMovie","state","isButtonDisabled","isError","controlHandle","setState","prevState","test","submitHandle","event","preventDefault","newMovie","props","onAdd","target","this","onSubmit","onBlur","type","disabled","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e221557.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport const Input = ({\n  labelText,\n  value,\n  name,\n  changeHandle,\n  title,\n  textOnError,\n}) => (\n  <div className=\"form__field\">\n    <label className=\"form__label\" htmlFor=\"title\">\n      {labelText}\n    </label>\n    <input\n      className={classNames(\n        'form__input',\n        { 'form__input--error': title },\n      )}\n      id={name}\n      name={name}\n      value={value}\n      onChange={changeHandle}\n      placeholder={name}\n      required={name !== 'description'}\n    />\n    {title\n    && <div className=\"error\">{textOnError}</div>}\n  </div>\n);\n\nInput.propTypes = {\n  labelText: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  textOnError: PropTypes.string.isRequired,\n  changeHandle: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\nimport { Input } from '../Input';\n\n// eslint-disable-next-line\nconst verifier = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    isButtonDisabled: false,\n    isError: {\n      title: false,\n      imgUrl: false,\n      imdbUrl: false,\n      imdbId: false,\n    },\n  };\n\n  controlHandle = () => {\n    const { title, imgUrl, imdbUrl, imdbId } = this.state;\n\n    if (!title) {\n      this.setState(prevState => ({\n        isButtonDisabled: true,\n        isError: {\n          ...prevState.isError,\n          title: true,\n        },\n      }));\n    }\n\n    if (!verifier.test(imgUrl)) {\n      this.setState(prevState => ({\n        isButtonDisabled: true,\n        isError: {\n          ...prevState.isError,\n          imgUrl: true,\n        },\n      }));\n    }\n\n    if (!verifier.test(imdbUrl)) {\n      this.setState(prevState => ({\n        isButtonDisabled: true,\n        isError: {\n          ...prevState.isError,\n          imdbUrl: true,\n        },\n      }));\n    }\n\n    if (!imdbId) {\n      this.setState(prevState => ({\n        isButtonDisabled: true,\n        isError: {\n          ...prevState.isError,\n          imdbId: true,\n        },\n      }));\n    }\n  }\n\n  submitHandle = (event) => {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    event.preventDefault();\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.props.onAdd(newMovie);\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  changeHandle =(event) => {\n    const { value, name } = event.target;\n\n    this.setState(prevState => ({\n      [name]: value,\n      isButtonDisabled: false,\n      isError: {\n        ...prevState.isError,\n        [name]: false,\n      },\n    }));\n  }\n\n  render() {\n    const { title, imgUrl, imdbUrl, imdbId } = this.state.isError;\n\n    return (\n      <form onSubmit={this.submitHandle} onBlur={this.controlHandle}>\n        <h1 className=\"form__header\">Add new movie</h1>\n\n        <Input\n          labelText=\"Add title\"\n          name=\"title\"\n          changeHandle={this.changeHandle}\n          title={title}\n          textOnError=\"Title should not be empty\"\n          value={this.state.title}\n        />\n\n        <Input\n          labelText=\"Add description\"\n          name=\"description\"\n          changeHandle={this.changeHandle}\n          value={this.state.description}\n        />\n\n        <Input\n          labelText=\"Add imgUrl\"\n          name=\"imgUrl\"\n          value={this.state.imgUrl}\n          changeHandle={this.changeHandle}\n          title={imgUrl}\n          textOnError=\"Please check the correctness of the imgUrl\"\n        />\n\n        <Input\n          labelText=\"Add imdbUrl\"\n          name=\"imdbUrl\"\n          value={this.state.imdbUrl}\n          changeHandle={this.changeHandle}\n          title={imdbUrl}\n          textOnError=\"Please check the correctness of the imdbUrl\"\n        />\n\n        <Input\n          labelText=\"Add imdbId\"\n          name=\"imdbId\"\n          value={this.state.imdbId}\n          changeHandle={this.changeHandle}\n          title={imdbId}\n          textOnError=\"imdbId should not be empty\"\n        />\n\n        <button\n          className=\"form__button\"\n          type=\"submit\"\n          disabled={this.state.isButtonDisabled}\n        >\n          Add movie\n        </button>\n\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}