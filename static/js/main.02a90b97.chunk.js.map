{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","verifier","NewMovie","state","isDisabled","isError","controlHandle","setState","prevState","test","submitHandle","event","preventDefault","newMovie","props","onAdd","changeHandle","target","value","name","this","onSubmit","onBlur","htmlFor","classNames","id","onChange","placeholder","required","type","disabled","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02a90b97.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\n// eslint-disable-next-line\nconst verifier = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    isDisabled: false,\n    isError: {\n      title: false,\n      imgUrl: false,\n      imdbUrl: false,\n      imdbId: false,\n    },\n  };\n\n  controlHandle = () => {\n    const { title, imgUrl, imdbUrl, imdbId } = this.state;\n\n    if (!title) {\n      this.setState(prevState => ({\n        isDisabled: true,\n        isError: {\n          ...prevState.isError,\n          title: true,\n        },\n      }));\n    }\n\n    if (!verifier.test(imgUrl)) {\n      this.setState(prevState => ({\n        isDisabled: true,\n        isError: {\n          ...prevState.isError,\n          imgUrl: true,\n        },\n      }));\n    }\n\n    if (!verifier.test(imdbUrl)) {\n      this.setState(prevState => ({\n        isDisabled: true,\n        isError: {\n          ...prevState.isError,\n          imdbUrl: true,\n        },\n      }));\n    }\n\n    if (!imdbId) {\n      this.setState(prevState => ({\n        isDisabled: true,\n        isError: {\n          ...prevState.isError,\n          imdbId: true,\n        },\n      }));\n    }\n  }\n\n  submitHandle = (event) => {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    event.preventDefault();\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.props.onAdd(newMovie);\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  changeHandle =(event) => {\n    const { value, name } = event.target;\n\n    this.setState(prevState => ({\n      [name]: value,\n      isDisabled: false,\n      isError: {\n        ...prevState.isError,\n        [name]: false,\n      },\n    }));\n  }\n\n  render() {\n    const { title, imgUrl, imdbUrl, imdbId } = this.state.isError;\n\n    return (\n      <form onSubmit={this.submitHandle} onBlur={this.controlHandle}>\n        <h1 className=\"form__header\">Add new movie</h1>\n\n        <div className=\"form__field\">\n          <label className=\"form__label\" htmlFor=\"title\">\n            Add title\n          </label>\n          <input\n            className={classNames(\n              'form__input',\n              { 'form__input--error': title },\n            )}\n            id=\"title\"\n            name=\"title\"\n            value={this.state.title}\n            onChange={this.changeHandle}\n            placeholder=\"Title\"\n            required\n          />\n          {title\n          && <div className=\"error\">Title should not be empty</div>}\n        </div>\n\n        <div className=\"form__field\">\n          <label className=\"form__label\" htmlFor=\"description\">\n            Add description\n          </label>\n          <input\n            className=\"form__input\"\n            id=\"description\"\n            name=\"description\"\n            value={this.state.description}\n            onChange={this.changeHandle}\n            placeholder=\"Description\"\n          />\n        </div>\n\n        <div className=\"form__field\">\n          <label className=\"form__label\" htmlFor=\"imgUrl\">\n            Add imgUrl\n          </label>\n          <input\n            className={classNames(\n              'form__input',\n              { 'form__input--error': imgUrl },\n            )}\n            id=\"imgUrl\"\n            name=\"imgUrl\"\n            value={this.state.imgUrl}\n            onChange={this.changeHandle}\n            placeholder=\"imgUrl\"\n            required\n          />\n          {imgUrl\n            && (\n            <div className=\"error\">\n              Please check the correctness of the imgUrl\n            </div>\n            )}\n        </div>\n\n        <div className=\"form__field\">\n          <label className=\"form__label\" htmlFor=\"imdbUrl\">\n            Add imdbUrl\n          </label>\n          <input\n            className={classNames(\n              'form__input',\n              { 'form__input--error': imdbUrl },\n            )}\n            id=\"imdbUrl\"\n            name=\"imdbUrl\"\n            value={this.state.imdbUrl}\n            onChange={this.changeHandle}\n            placeholder=\"imdbUrl\"\n            required\n          />\n          {imdbUrl\n          && (\n          <div className=\"error\">\n            Please check the correctness of the imdbUrl\n          </div>\n          )}\n        </div>\n\n        <div className=\"form__field\">\n          <label className=\"form__label\" htmlFor=\"imdbId\">\n            Add imdbId\n          </label>\n          <input\n            className={classNames(\n              'form__input',\n              { 'form__input--error': imdbId },\n            )}\n            id=\"imdbId\"\n            name=\"imdbId\"\n            value={this.state.imdbId}\n            onChange={this.changeHandle}\n            placeholder=\"imdbId\"\n            required\n          />\n          {imdbId\n          && <div className=\"error\">imdbId should not be empty</div>}\n        </div>\n\n        <button\n          className=\"form__button\"\n          type=\"submit\"\n          disabled={this.state.isDisabled}\n        >\n          Add movie\n        </button>\n\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}